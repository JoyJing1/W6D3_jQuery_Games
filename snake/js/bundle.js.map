{"version":3,"sources":["webpack:///webpack/bootstrap 925fa6ed41b01da95e0f","webpack:///./js/main.js","webpack:///./js/game.js","webpack:///./js/snake-view.js","webpack:///./js/coord.js","webpack:///./js/board.js","webpack:///./js/snake.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACTD;;AAEA;;AAEA;;;;;;;ACJA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB,mBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClEA;AACA;AACA;AACA;;AAEA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACtBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;;;;;;ACxBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 925fa6ed41b01da95e0f\n **/","const SnakeGame = require('./game.js');\nconst SnakeView = require('./snake-view.js');\n\nconsole.log(\"we're in the main.js\");\n\n$( () => {\n  const rootEl = $('.snake');\n  const game = new SnakeGame();\n  new SnakeView(game, rootEl);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","function SnakeGame () {\n\n}\n\nmodule.exports = SnakeGame;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/game.js\n ** module id = 1\n ** module chunks = 0\n **/","const Board = require('./board.js');\nconst Coord = require('./coord.js');\n\nfunction SnakeView (game, $el) {\n  this.board = new Board();\n  this.board.addApple();\n  this.element = $el;\n\n  this.setupBoard(15);\n  $(\"body\").keydown(this.handleKeyEvent.bind(this.board));\n  setInterval(this.step.bind(this.board), 500);\n}\n\nSnakeView.prototype.handleKeyEvent = function(event) {\n  switch (event.which) {\n    case 37:\n      this.snake.turn(Coord.DIRS[\"W\"]);\n    break;\n    case 38:\n      this.snake.turn(Coord.DIRS[\"N\"]);\n    break;\n    case 39:\n      this.snake.turn(Coord.DIRS[\"E\"]);\n    break;\n    case 40:\n      this.snake.turn(Coord.DIRS[\"S\"]);\n    break;\n    default: return;\n  }\n  event.preventDefault();\n};\n\nSnakeView.prototype.step = function() {\n  this.snake.move();\n  const $lis = $(\"li\");\n  let allLis = Array.from($lis);\n\n  allLis.forEach( li => {\n    let $li = $(li);\n    let pos = $li.data(\"pos\").split(\",\").map(el => parseInt(el));\n    let coord = new Coord(...pos);\n    if (this.snake.onPos(coord)) {\n      $li.addClass(\"snake-body\");\n    } else {\n      $li.removeClass(\"snake-body\");\n    }\n\n    if (this.appleHere(coord)) {\n      $li.addClass(\"apple\");\n    } else {\n      $li.removeClass(\"apple\");\n    }\n  });\n};\n\nSnakeView.prototype.setupBoard = function(n) {\n  const $grid = $(\"<ul>\");\n  for(let i = 0; i < n; i++) {\n    for(let j = 0; j < n; j++) {\n      let $square = $(\"<li>\").attr(\"data-pos\", [i, j]);\n      $grid.append($square);\n    }\n  }\n  this.element.append($grid);\n};\n\nmodule.exports = SnakeView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 2\n ** module chunks = 0\n **/","function Coord(x, y) {\n  this.x = x;\n  this.y = y;\n}\n\nCoord.DIRS = {\"N\": new Coord(-1, 0),\n              \"E\": new Coord(0, 1),\n              \"S\": new Coord(1, 0),\n              \"W\": new Coord(0, -1)};\n\nCoord.prototype.plus = function (dir) {\n  return new Coord(this.x + dir.x, this.y + dir.y);\n};\n\nCoord.prototype.equals = function (otherPos) {\n  return (this.x === otherPos.x && this.y === otherPos.y);\n};\n\nCoord.prototype.isOpposite = function (newDir) {\n  return this.x + newDir.x === 0 && this.y + newDir.y === 0;\n};\n\nmodule.exports = Coord;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/coord.js\n ** module id = 3\n ** module chunks = 0\n **/","const Snake = require('./snake.js');\nconst Coord = require('./coord.js');\n\nfunction Board () {\n  this.snake = new Snake(new Coord(0, 1));\n  this.apples = [];\n}\n\nBoard.prototype.addApple = function () {\n  let coord = new Coord(Math.floor(Math.random() * 15),\n                  Math.floor(Math.random() * 15));\n  this.apples.push(coord);\n};\n\nBoard.prototype.appleHere = function(pos) {\n  let response = false;\n  this.apples.forEach( coord => {\n    if (coord.x === pos.x && coord.y === pos.y) {\n      response = true;\n    }\n  });\n  return response;\n};\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/board.js\n ** module id = 4\n ** module chunks = 0\n **/","const Coord = require('./coord.js');\n\nfunction Snake(direction) {\n  this.direction = direction;\n  this.segments = [ new Coord(3,3) ];\n}\n\nSnake.prototype.move = function () {\n  let newDir = this.direction;\n  console.log(this.segments[0]);\n  let newPos = this.segments[0].plus(newDir);\n\n  this.segments.pop();\n  this.segments.unshift(newPos);\n\n  if (this.offBoard()) {\n    alert('Game Over!');\n  }\n};\n\nSnake.prototype.turn = function (newDir) {\n  if (!this.direction.isOpposite(newDir)) {\n    this.direction = newDir;\n  }\n};\n\nSnake.prototype.offBoard = function () {\n  let pos = this.segments[0];\n  return (pos.x >= 15 || pos.y >=15);\n};\n\nSnake.prototype.onPos = function(pos) {\n  let response = false;\n  this.segments.forEach( coord => {\n    if (coord.x === pos.x && coord.y === pos.y) {\n      response = true;\n    }\n  });\n  return response;\n};\n\nmodule.exports = Snake;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}